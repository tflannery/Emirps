package emirps;

import java.util.*;
import java.lang.*;

public class EmirpsClass {
			 
		//trivial prime algorithm, sub in whatever algorithm you want
		public static boolean isPrime(long x){
			if(x < 2) return false;
			if(x == 2) return true;
			if((x & 1) == 0) return false;
	 
			for(long i = 3; i <= Math.sqrt(x);i+=2){
				if(x % i == 0) return false;
			}
	 
			return true;
		}
	 
		public static boolean isEmirp(long x){
			String xString = Long.toString(x);
			if(xString.length() == 1) return false;
			if(xString.matches("[24568].*") || xString.matches(".*[24568]")) return false; //eliminate some easy rejects
			long xR = Long.parseLong(new StringBuilder(xString).reverse().toString());
			if(xR == x) return false;
			return isPrime(x) && isPrime(xR);
		}
	 
		public static void main(String[] args){
			int count = 0;
			long x = 1;
	 
			System.out.println("First 100 emirps:");
			while(count < 100){
				if(isEmirp(x)){
					if ((count % 10) == 0)
						System.out.println("");
					count++;
					System.out.print(x + " ");
				}
				x++;
			}
		}
}
